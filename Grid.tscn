[gd_scene load_steps=4 format=3 uid="uid://cs5bxtio4lyn5"]

[ext_resource type="Texture2D" uid="uid://bgt6kxwsex4wb" path="res://Background.png" id="1_jyavb"]

[sub_resource type="GDScript" id="GDScript_6qfl3"]
script/source = "extends ParallaxLayer

# Called when the node enters the scene tree for the first time.
func _ready():
	var max_dim : Vector2i = DisplayServer.screen_get_size(-1);
	
	# Gets the maximum size of all the screens on the device and stores them in the max_dim array
	for i in range(DisplayServer.get_screen_count()):
		for j in range(2):
			max_dim[j] = max(max_dim[j], DisplayServer.screen_get_size(i)[j]);
	
	# Rounds every dimension up to a multiple of 64 so the grid pattern stays smooth
	for i in range(2):
		max_dim[i] = ceil(max_dim[i] / 64.0) * 64;
	
	# Applies the calculated sizes to the grid pattern and updates the motion_mirroring
	motion_mirroring = max_dim;
	$TextureRect.set_size(max_dim);
"

[sub_resource type="GDScript" id="GDScript_qnhw8"]
script/source = "extends ParallaxLayer

@export_enum(\"X\", \"Y\") var axis : int = 0;
@export var line_width : float = 4.0;

# Called when the node enters the scene tree for the first time.
func _ready():
	var max_dim : Vector2i = DisplayServer.screen_get_size(-1);
	
	# Gets the maximum screen size for the target axis and stores it in max_dim[axis]
	for i in range(DisplayServer.get_screen_count()):
		max_dim[axis] = max(max_dim[axis], DisplayServer.screen_get_size(i)[axis]);
	
	# Sets the width on the opposite axis to the provided value
	max_dim[1 - axis] = int(line_width);
	
	# Applies the calulcated sizes and updates the motion_mirroring
	motion_mirroring[axis] = max_dim[axis];
	$ColorRect.set_size(max_dim);
	
	# Sets the position on the opposite axis so that it's centered
	var color_rect_position : Vector2 = Vector2(0.0, 0.0);
	color_rect_position[1 - axis] = -line_width / 2.0;
	$ColorRect._set_position(color_rect_position);
"

[node name="Grid" type="ParallaxBackground"]

[node name="GridBG" type="ParallaxLayer" parent="."]
motion_mirroring = Vector2(1280, 768)
script = SubResource("GDScript_6qfl3")

[node name="TextureRect" type="TextureRect" parent="GridBG"]
offset_right = 1280.0
offset_bottom = 768.0
texture = ExtResource("1_jyavb")
stretch_mode = 1

[node name="X Axis" type="ParallaxLayer" parent="."]
motion_mirroring = Vector2(1280, 0)
script = SubResource("GDScript_qnhw8")

[node name="ColorRect" type="ColorRect" parent="X Axis"]
offset_top = -2.0
offset_right = 1280.0
offset_bottom = 2.0
color = Color(0.533333, 0.117647, 0.117647, 1)

[node name="Y Axis" type="ParallaxLayer" parent="."]
motion_mirroring = Vector2(0, 720)
script = SubResource("GDScript_qnhw8")
axis = 1

[node name="ColorRect" type="ColorRect" parent="Y Axis"]
offset_left = -2.0
offset_right = 2.0
offset_bottom = 720.0
color = Color(0.192157, 0.533333, 0.117647, 1)
